I"¥(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  CourseTaking.Views.AssessmentView = (function(superClass) {
    extend(AssessmentView, superClass);

    function AssessmentView() {
      return AssessmentView.__super__.constructor.apply(this, arguments);
    }

    AssessmentView.prototype.template = JST['courses/assessment'];

    AssessmentView.prototype.initialize = function() {
      alert('yoooooooo called finally');
      return this.render();
    };

    AssessmentView.prototype.render = function() {
      this.$el.html(this.template);
      return this;
    };

    return AssessmentView;

  })(Backbone.View);

}).call(this);
:ET